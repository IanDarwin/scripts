#!/usr/bin/env python

import sys
import libxml2

# input will be a UIEE file WITH NO HEADER produced by Alibris
tag2col = {
"UR":"sku",
"BN":"isbn",
"AA":"author",
"TI":"title",
"DP":"yearpublished",
"PU":"oddpublisher",
"ED":"edition",
"BD":"media",
"CN":"usedcond",
"NC":"descr",
"PR":"price",
"CO":"stockcount",
"LO":"location",
"XXCN":"maincond",
}

# current column names are:
# sku, category, subcat, author, title, publisher, isbn, yearpublished, price, stockcount, usedcond, exturl, media,
# descr, location, oddpublisher, imageurl, maincond, jacketconddesc, edition, affiliate, credt, moddate, language

data = {}

def sqlify(s):
	ns = ''
	for ch in s:
		ns += ch
		if ch == '\'':
			ns += '\''
	return ns

conditions = {
	"N" :"New",
	"F" :"Fine",
	"VG":"Very good",
	"G" :"Good",
	"FR":"Fair",
	"P" :"Poor"
}
def fixCondition():
	global data
	cs = data['CN']
	for (k,v) in conditions.items():
		if cs.startswith(v):
			data["XXCN"] = k
			cs = cs[len(v):]
			if cs.startswith(". "):
				cs = cs[2:]
			NO_DJ = "No dust jacket as issued.";
			if cs.startswith(NO_DJ):
				cs = cs[len(NO_DJ):]
			if cs.startswith(' '):
				cs = cs[:1]
			if len(cs) > 0:
				data['CN'] = cs
			else:
				del data['CN']

def dump():
	global data
	comma = ''
	fixCondition()
	print "insert into products(sku) values('%s');" % data['UR']
	print "update products set",
	for k in data.keys():
		if k != "UR":
			print comma + "%s = '%s'" % (sqlify(tag2col[k]),sqlify(data[k])),
			comma = ',';
	print 'where sku = \'%s\';'% data['UR']

def main():
	global data
	for filename in sys.argv[1:]:
		data = {}
		file = open(filename);
		for line in file:
			l = len(line)
			line = line[0:l-1]
			if len(line) == 0:
				dump();
				data = {}
				pass
			TAG = line[0:2]
			VAL = line[3:]
			if TAG in tag2col.keys():
				data[TAG] = VAL

if __name__ == '__main__':
	main()
