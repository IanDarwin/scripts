# This is an awk script.
# DO NOT USE A SHEBANG (#!) LINE - Must pass both -F": +" and -f, shebang can't

# $Id$

# convert entries like this, to QTopia via SQLite
# (this input was produced from my Blackberry(tm), using the wonderful
# "barry" program by Chris Frey (http://www.netdirect.ca/software/packages/barry/)
#
#Contact: 0xffffffff (0)
#    FirstName           : Aaron
#    LastName            : Smiteh
#    Email               : smiteme@ersofpafr.com
#    WorkPhone           : 1-800-555-1212
#    Company             : A & M Codecraft
#    WorkAddress1        : 456 Main St
#    WorkCity            : Bytown
#    WorkProvince        : ON
#    UserDefined1        : 24 S 2nd exit over 401 left on Main 3km
#
# For a full list of the fields in $1, do "make tagslist" (or see "dump" below)
#
# Information on the SQL schema was introspected using sqlitebrowser.

/^$/	{
	dump();
	print ""
	delete entry
	}

/^Contact:/ {
	$2 = trim($2)
	sub(/ [(]0[)]/, "", $2)
	recId = hex2dec($2)
	}

/^    /	{
	# print "DEBUG: " $1, "-->", $2
	entry[trim($1)] = trim($2)
	}

function dump() {
	print "-- Entry for", recId
	firstName = entry["FirstName"];
	lastName = entry["LastName"]
	company = entry["Company"]
	name = trim(firstName " " lastName)
	if (name == "") {
		name = company
	}
	if (name ~ /^ *$/) {
		name = recId
	}

	homePhone1=entry["HomePhone"]
	homePhone2=entry["HomePhone2"]
        workPhone1 = entry["WorkPhone"]
        workPhone2 = entry["WorkPhone2"]
	faxNumber = entry["Fax"]
    	cellPhone = entry["MobilePhone"]
	defaultPhone = ""
	if (homePhone1 != "")
		defaultPhone = homePhone1;
	else if (workPhone1 != "")
		defaultPhone = workPhone1;
	else if (cellPhone != "") 
		defaultPhone = cellPhone;

	default_email =  entry["Email"]
        b_webpage = entry["URL"]
	cat = doCategory(trim(entry["Categories"]));
	notes = trim(entry["Notes"] " " entry["UserDefined1"])
        jobTitle = entry["JobTitle"]

	printf("insert into contacts(recid, firstname, lastname, company, default_email, default_Phone, b_webpage, jobTitle, context ) values(%d, %s, %s, %s, %s, %s, %s, %s, %d);\n",
		recId, sqlEscape(firstName), sqlEscape(lastName), sqlEscape(company), 
		sqlEscape(default_email), sqlEscape(defaultPhone), sqlEscape(b_webpage), 
		sqlEscape(jobTitle), 1)

	# all phones (including default) go into contactphonenumbers
	PHONE_FMT = "insert into contactphonenumbers(recid, phone_number, phone_type) values(%d, %s, %d);\n"
	if (homePhone1 != "") printf(PHONE_FMT, recId, sqlEscape(homePhone1), 1);
	if (homePhone2 != "") printf(PHONE_FMT, recId, sqlEscape(homePhone2), 1);
	if (workPhone1 != "") printf(PHONE_FMT, recId, sqlEscape(workPhone1), 2);
	if (workPhone2 != "") printf(PHONE_FMT, recId, sqlEscape(workPhone2), 2);
	if (cellPhone != "") printf(PHONE_FMT, recId, sqlEscape(cellPhone), 257);
	if (faxNumber != "") printf(PHONE_FMT, recId, sqlEscape(faxNumber), 258); # XXX

	# HomeAddress goes into contactAddresses
        homeAddress1 = entry["HomeAddress1"]
        homeAddress2 = entry["HomeAddress2"]
        homeCity = entry["HomeCity"]
        homeProvince = entry["HomeProvince"]
        homePostalCode = entry["HomePostalCode"]
        homeCountry = entry["HomeCountry"]
	if (homeAddress1 != "" || homeCity != "") {
		print "insert into contactaddresses(recid, addresstype, street, city, state, zip, country)"
		printf("\tvalues(%d, %d, %s, %s, %s, %s, %s);\n", recId, 1, 
			sqlEscape(trim(homeAddress1 " " homeAddress2)), 
			sqlEscape(homeCity), sqlEscape(homeProvince), 
			sqlEscape(homePostalCode), sqlEscape(homeCountry));
	}

	# work address also goes into contactAddresses
        workAddress1 = entry["WorkAddress1"]
        workAddress2 = entry["WorkAddress2"]
        workCity = entry["WorkCity"]
        workPostalCode = entry["WorkPostalCode"]
        workProvince = entry["WorkProvince"]
        workCountry = entry["WorkCountry"]
	if (workAddress1 != "" || workCity != "") {
		print "insert into contactaddresses(recid, addresstype, street, city, state, zip, country)"
		printf("\tvalues(%d,%d, %s, %s, %s, %s, %s);\n", recId, 2, 
			sqlEscape(trim(workAddress1 " " workAddress2)),
			sqlEscape(workCity), sqlEscape(workProvince), 
			sqlEscape(workPostalCode), sqlEscape(workCountry));
	}

}

# get the number for the given category, maintaining a map "categories" mapping name->catId
# returns the category number
function doCategory(cat) {
	if (cat == "" || cat == "Unfiled")
		return 0;
	if (categories[cat] == "") {
		printf("insert into categories(catid,name) values(%d, %s)", ++catId, sqlEscape(cat));
		categories[cat]=catId
	}
	return categories[cat];
}

function trim(arg) {
	# print "ARG",arg "."
	gsub(/(^ +)|( +$)/, "", arg)
	# print "RET",arg "."
	return arg;
}

# sqlescape - return "null" for empty string, double up single quotes ("O''Reilly"), and quote.
function sqlEscape(arg) {
	if (arg == "")
		return "null";
	gsub(/'/, "&&", arg)
	return "'" arg "'"
}

# hex2dec from http://www.tek-tips.com/viewthread.cfm?qid=1352504&page=2
function hex2dec(h, i, x, v) {
	h=tolower(h)
	sub(/^0x/,"",h)
	for(i=1; i<=length(h); ++i){
		x=index("0123456789abcdef", substr(h,i,1))
		if(!x)
			return"NaN"
		v=(16*v)+x-1
	}
	return v
}
