#!/usr/bin/env python

''' Program to run SNMP to askk a print for its status
'''

import os,re,sys,time
from subprocess import Popen,PIPE

# To find out if your printer supports the needed MIB:
# snmpget -v 1 -c 'public' ianprint 1.3.6.1.2.1.43.10.2.1.4.1.1
LIFEPAGECOUNT_OID = "1.3.6.1.2.1.43.10.2.1.4.1.1"	# pages since printer manufactured
PRINTERSTATUS_OID = "1.3.6.1.2.1.25.3.5.1.1.1"		# current printer status

def snmpGet(ip, oid):
	''' send SNMP oid to printer in 'ip', return int result '''
	args = [ 'snmpget', '-O', 'v', '-v', '2c', '-c', 'public', ip, oid ]
	proc = Popen(args, stdout=PIPE)
	printout = proc.stdout.read()
	m=re.search(r'.*\D(\d+)', printout) # get last # on line
	if m == None:
		sys.stderr.write("ERROR: Could not parse SNMP output %s\n" % printout)
		sys.exit(1)
	return int(m.group(1))

def printerJobPages():
	return snmpGet(printerIP, LIFEPAGECOUNT_OID)

def printerStatus():
	return snmpGet(printerIP, PRINTERSTATUS_OID)

def	main():
	progname = sys.argv[0]
	args = sys.argv[1:] # minus progname
	nargs = len(args)
	global printerIP
	if nargs == 1:
		printerIP = args[0]
	else:
		sys.stderr.write("Usage: %s printerIP\n" % progname)
		sys.exit(0)

	print "Printer %s status %s" % (printerIP, printerStatus())
	print "Printer %s lifetime-pages %s" % (printerIP, printerJobPages())

	sys.exit(0)

if __name__ == '__main__':
	main()
